@model FastService.Models.OrdenModel

@using (Ajax.BeginForm("Save", "Ticket", new AjaxOptions { HttpMethod = "Post", OnSuccess = "ReloadTicketDetails(data)", OnFailure = "OnError", LoadingElementId = "spinner" }, new { @id = "ticket-form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                @Html.LabelFor(model => model.NroOrden)
                @Html.TextBoxFor(model => model.NroOrden, new { @class = "form-control", @id = "ticketid", @disabled = true })
                @Html.HiddenFor(model => model.NroOrden)
                @Html.ValidationMessageFor(model => model.NroOrden)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.EstadoDesc)
                @Html.TextBoxFor(model => model.EstadoDesc, new { @class = "form-control", @disabled = true })
                @Html.ValidationMessageFor(model => model.EstadoDesc)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.EstadoFecha)
                @Html.TextBoxFor(model => model.EstadoFecha, new { @class = "form-control", @disabled = true })
                @Html.ValidationMessageFor(model => model.EstadoFecha)
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.Domicilio)
                @Html.CheckBoxFor(model => model.Domicilio, new { @class = "form-control ticketCheckBox" })
                @Html.ValidationMessageFor(model => model.Domicilio)
            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.Garantia)
                @Html.CheckBoxFor(model => model.Garantia, new { @class = "form-control ticketCheckBox" })
                @Html.ValidationMessageFor(model => model.Garantia)
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Presupuesto)
                @Html.TextBoxFor(model => model.Presupuesto, new { @class = "form-control", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Presupuesto)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Monto)
                @Html.TextBoxFor(model => model.Monto, new { @class = "form-control", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Monto)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.ResponsableNombre)
                @Html.DropDownListFor(model => model.ResponsableId, (List<SelectListItem>)ViewBag.ListaResponsables, "Seleccione responsable", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ResponsableId)
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.TecnicoNombre)
                @Html.DropDownListFor(model => model.TecnicoId, (List<SelectListItem>)ViewBag.ListaTecnicos, "Seleccione tecnico", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TecnicoId)
            </div>
        </div>
    </div>

        <div class="row">
            <div class="col-md-12">
                <div class="col-md-3">
                    @Html.HiddenFor(model => model.Cliente.ClienteId, new { @class = "Cliente_Id", @id = "Cliente_Id" })
                    @Html.LabelFor(model => model.Cliente.Dni)
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.Cliente.Dni, new { @class = "form-control ac-cliente Cliente_Dni", @id = "Cliente_Dni", @autocomplete = "off" })
                        <span class="input-group-btn">
                            <button class="btn btn-success buscarClienteBtn" type="button" title="Buscar cliente..."><i class="fa fa-search"></i></button>
                        </span>
                        <span class="input-group-btn">
                            <button class="btn btn-info historialClienteBtn" type="button" title="Ver historial del cliente..."><i class="fa fa-list"></i></button>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Cliente.Dni)
                </div>
                @*<div class="col-md-1">
                        @Html.Label("Sin DNI?")
                        @Html.CheckBox("No tiene", new { @class = "form-control ticketCheckBox chkNoTieneDni", @id = "chkNoTieneDni" })
                    </div>*@
                <div class="col-md-3 ui-front">
                    @Html.LabelFor(model => model.Cliente.Nombre)
                    @Html.TextBoxFor(model => model.Cliente.Nombre, new { @class = "form-control ac-cliente Cliente_Nombre", @id = "Cliente_Nombre", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Cliente.Nombre)
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Cliente.Apellido)
                    @Html.TextBoxFor(model => model.Cliente.Apellido, new { @class = "form-control ac-cliente Cliente_Apellido", @id = "Cliente_Apellido", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Cliente.Apellido)
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Cliente.Mail)
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.Cliente.Mail, new { @class = "form-control Cliente_Mail", @id = "Cliente_Mail", @autocomplete = "off" })
                        <span class="input-group-btn">
                            <button class="btn btn-danger chkNoTieneMail" type="button" title="Omitir email"><i class="fa fa-ban"></i></button>
                        </span>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Cliente.Telefono)
                    @Html.TextBoxFor(model => model.Cliente.Telefono, new { @class = "form-control Cliente_Telefono", @id = "Cliente_Telefono", @autocomplete = "off" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Cliente.Celular)
                    @Html.TextBoxFor(model => model.Cliente.Celular, new { @class = "form-control Cliente_Celular", @id = "Cliente_Celular", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Cliente.Celular)
                </div>
                <div class="col-md-6 ui-front">
                    @Html.LabelFor(model => model.Cliente.Direccion)
                    @Html.TextBoxFor(model => model.Cliente.Direccion, new { @class = "form-control Cliente_Direccion", @id = "Cliente_Direccion", @style = "max-width:700px !important", @placeholder = "Ingrese una direccion", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Cliente.Direccion)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Cliente.Dir.Calle)
                    @Html.TextBoxFor(model => model.Cliente.Dir.Calle, new { @class = "form-control route", @id = "route", @autocomplete = "off" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Cliente.Dir.Altura)
                    @Html.TextBoxFor(model => model.Cliente.Dir.Altura, new { @class = "form-control street_number", @id = "street_number", @autocomplete = "off" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Cliente.Dir.Calle2)
                    @Html.TextBoxFor(model => model.Cliente.Dir.Calle2, new { @class = "form-control calle2", @id = "calle2", @autocomplete = "off" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Cliente.Dir.Calle3)
                    @Html.TextBoxFor(model => model.Cliente.Dir.Calle3, new { @class = "form-control calle3", @id = "calle3", @autocomplete = "off" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Cliente.Dir.Ciudad)
                    @Html.TextBoxFor(model => model.Cliente.Dir.Ciudad, new { @class = "form-control locality", @id = "locality", @autocomplete = "off" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Cliente.Dir.CodigoPostal)
                    @Html.TextBoxFor(model => model.Cliente.Dir.CodigoPostal, new { @class = "form-control postal_code", @id = "postal_code", @autocomplete = "off" })
                </div>

                <div hidden>
                    @Html.LabelFor(model => model.Cliente.Dir.Provincia)
                    @Html.TextBoxFor(model => model.Cliente.Dir.Provincia, new { @class = "form-control administrative_area_level_1", @id = "administrative_area_level_1", @autocomplete = "off" })
                </div>
                <div hidden>
                    @Html.LabelFor(model => model.Cliente.Dir.Pais)
                    @Html.TextBoxFor(model => model.Cliente.Dir.Pais, new { @class = "form-control country", @id = "country", @autocomplete = "off" })
                </div>

                <div hidden>
                    @Html.HiddenFor(model => model.Cliente.Dir.Latitud, new { @id = "Latitud" })
                    @Html.HiddenFor(model => model.Cliente.Dir.Longitud, new { @id = "Longitud" })
                </div>
            </div>

        </div>


        <div class="row">
            <div class="col-md-12">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.TipoDesc)
                    @Html.DropDownListFor(model => model.TipoId, (List<SelectListItem>)ViewBag.ListaTipoDispositivo, "Seleccione dispositivo", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TipoId)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.MarcaDesc)
                    @Html.DropDownListFor(model => model.MarcaId, (List<SelectListItem>)ViewBag.ListaMarcas, "Seleccione marca", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MarcaId)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.NroSerie)
                    @Html.TextBoxFor(model => model.NroSerie, new { @class = "form-control", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.NroSerie)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Modelo)
                    @Html.TextBoxFor(model => model.Modelo, new { @class = "form-control", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Modelo)
                </div>
                <div class="col-md-1">
                    @Html.LabelFor(model => model.Ubicacion)
                    @Html.TextBoxFor(model => model.Ubicacion, new { @class = "form-control", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Ubicacion)
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Accesorios)
                    @Html.TextBoxFor(model => model.Accesorios, new { @class = "form-control", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Accesorios)
                </div>
            </div>
        </div>

        <div hidden class="datosComercioDiv">

            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Comercio.Descripcion)
                        @Html.DropDownListFor(model => model.Comercio.ComercioId, (List<SelectListItem>)ViewBag.ListaComercio, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Comercio.ComercioId)
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Comercio.Telefono)
                        @Html.TextBoxFor(model => model.Comercio.Telefono, new { @class = "form-control", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.Comercio.Telefono)
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.FechaCompra)
                        @Html.TextBoxFor(model => model.FechaCompra, "{0:dd/MM/yyyy}", new { @class = "fechacompra form-control form-control-inline", @text = DateTime.Now, @placeholder = "Seleccione una fecha", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.FechaCompra)
                    </div>
                </div>
            </div>
        </div>


        <br>

        <div class="form-actions">
            <div class="row">
                <div class="col-md-12 text-center">
                    <input id="btnGuardarOrden" class="btn btn-success" type="submit" value="GUARDAR" />
                </div>
            </div>
        </div>
}

<div id="divNovedades">
    @RenderPage("Novedades.cshtml", Model)
</div>

<style>
    form .row {
        padding-top: 10px;
    }

    .buscarClienteBtn {
        /*margin-top: 10px;*/
        /*margin-left: 12px;*/
    }

    .ticketCheckBox {
        height: 30px;
    }
</style>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script>

    //$(".ac-cliente").autocomplete({
    //    source: function (request, response) {
    //        $.ajax({
    //            url: "/Cliente/Index",
    //            type: "POST",
    //            dataType: "json",
    //            data: { Prefix: request.term },
    //            success: function (data) {
    //                response($.map(data, function (item) {
    //                    return { label: item.DisplayNameAndAddress, value: item.Dni };
    //                }))

    //            }
    //        })
    //    },
    //    select: function (event, ui) {
    //        ui.item.value;
    //        $.ajax({
    //            url: "/Cliente/Get",
    //            type: "POST",
    //            dataType: "json",
    //            data: { ClienteId: ui.item.value },
    //            success: function (data) {
    //                $(".Cliente_Dni").val(data.Dni);
    //                $(".Cliente_Nombre").val(data.Nombre);
    //                $(".Cliente_Apellido").val(data.Apellido);
    //                $(".Cliente_Mail").val(data.Mail);
    //                $(".Cliente_Telefono").val(data.Telefono);
    //                $(".Cliente_Celular").val(data.Celular);
    //                $(".Cliente_Direccion").val(data.Direccion);
    //                $(".route").val(data.Calle);
    //                $(".street_number").val(data.Altura);
    //                $(".locality").val(data.Provincia);
    //                $(".postal_code").val(data.CodigoPostal); calle3
    //                $(".country").val(data.Pais);
    //                $(".calle2").val(data.Calle2);
    //                $(".calle3").val(data.Calle3);
    //            }
    //        })
    //    },
    //});

    $(function () {
        try {
            $.validator.methods.date = function (value, element) {
                //var valid = this.optional(element) || Globalize.parseDate(value, "dd MMM, yyyy") !== null;
                //console.info(valid);
                return true;
            }
        } catch (e) {
            console.info(e)
        }

        $.datepicker.regional['es'] = {
            closeText: 'Cerrar',
            prevText: '< Ant',
            nextText: 'Sig >',
            currentText: 'Hoy',
            monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
            monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
            dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
            dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Juv', 'Vie', 'Sáb'],
            dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
            weekHeader: 'Sm',
            dateFormat: 'dd/mm/yy',
            firstDay: 1,
            isRTL: false,
            showMonthAfterYear: false,
            yearSuffix: ''
        };

        $.datepicker.setDefaults($.datepicker.regional['es']);

        $(".fechacompra").datepicker();

        $(".chkNoTieneMail").click(function () {
            $(".Cliente_Mail").val("noaplica@noaplica.com");
        });

        //$(".chkNoTieneDni").change(function () {
        //    if ($(".chkNoTieneDni").prop("checked") == true) {
        //        $(".Cliente_Dni").val("999999999");
        //    } else {
        //        $(".Cliente_Mail").val("");
        //    }
        //});

        if ("@Model.Garantia" == "True") {
            $(".datosComercioDiv").removeAttr("hidden", true);
        }

        $("#Garantia").click(function () {
            if ($("#Garantia").prop("checked")) {
                $(".datosComercioDiv").removeAttr("hidden", true);
            } else {
                $(".datosComercioDiv").attr("hidden", true);
            }
        })

        $(".buscarClienteBtn").click(function () {
             ajaxGetNoCustomError(
                    "@Url.Action("Buscar","Cliente")",
                    function (data) {
                        $("#BuscarClienteContent").html(data);
                        $("#modalBuscarCliente").modal();
                    }
                );
        })

        $(".historialClienteBtn").click(function () {
             ajaxGetNoCustomError(
                    "@Url.Action("Historia","Cliente")",
                    function (data) {
                        $("#HistoriaClienteContent").html(data);
                        $("#modalHistoriaCliente").modal();
                    }
                );
        })

        $.ajax({
            url: "@Url.Action("AutoCompleteAddress", "GoogleMaps")/Cliente_Direccion",
            success: function (data) {
                $(".page-content").append(data); //This is where to append the component required for maps autocomplete
            }
        });
    })
</script>

